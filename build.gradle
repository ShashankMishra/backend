plugins {
    id 'java'
    id 'io.quarkus'
}

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    implementation enforcedPlatform("${quarkusPlatformGroupId}:${quarkusPlatformArtifactId}:${quarkusPlatformVersion}")
    implementation enforcedPlatform("${quarkusPlatformGroupId}:quarkus-amazon-services-bom:${quarkusPlatformVersion}")
    implementation 'io.quarkiverse.amazonservices:quarkus-amazon-dynamodb-enhanced'
    implementation 'io.quarkus:quarkus-rest'
    implementation 'io.quarkus:quarkus-rest-jackson'
    implementation 'io.quarkus:quarkus-arc'
    implementation 'io.quarkus:quarkus-oidc'
    implementation 'io.quarkus:quarkus-oidc-client'
    implementation 'io.quarkus:quarkus-smallrye-jwt'
    implementation 'io.quarkus:quarkus-logging-json'
    implementation 'io.quarkus:quarkus-opentelemetry'
    implementation 'org.projectlombok:lombok:1.18.32'
    implementation 'software.amazon.awssdk:url-connection-client'
    // implementation 'io.quarkiverse.amazonservices:quarkus-amazon-cognito-user-pools'
    implementation 'org.hibernate.validator:hibernate-validator:8.0.1.Final'
    implementation 'jakarta.validation:jakarta.validation-api:3.0.2'
    annotationProcessor 'org.projectlombok:lombok:1.18.32'

    testImplementation 'io.quarkus:quarkus-junit5'
    testImplementation 'io.rest-assured:rest-assured'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.10.2'
    testImplementation 'org.mockito:mockito-core:5.2.0'
    testImplementation 'org.mockito:mockito-junit-jupiter:5.2.0'
    testImplementation 'io.quarkus:quarkus-junit5:3.8.2'
    testImplementation 'io.rest-assured:rest-assured:5.4.0'
    testImplementation 'org.projectlombok:lombok:1.18.32'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.32'
}

group 'com.qrust'
version '1.0.0-SNAPSHOT'

java {
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

test {
    systemProperty "java.util.logging.manager", "org.jboss.logmanager.LogManager"
}
compileJava {
    options.encoding = 'UTF-8'
    options.compilerArgs << '-parameters'
}

compileTestJava {
    options.encoding = 'UTF-8'
}

tasks.register('createDynamoDbTables', Exec) {
    group = 'local setup'
    description = 'Create DynamoDB tables in local DynamoDB (LocalStack) using AWS CLI.'
    commandLine 'bash', 'create-dynamodb-tables.sh'
}

tasks.register('deleteDynamoDbTables', Exec) {
    description = 'Deletes all DynamoDB tables defined in delete-dynamodb-tables.sh'
    group = 'DynamoDB'
    workingDir = projectDir
    commandLine 'bash', 'delete-dynamodb-tables.sh'
}
