name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  id-token: write
  contents: read
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      docker:
        image: docker:24.0.5-dind
        options: --privileged
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Set dummy AWS credentials for DynamoDB Local
        run: |
          echo "AWS_ACCESS_KEY_ID=dummy" >> $GITHUB_ENV
          echo "AWS_SECRET_ACCESS_KEY=dummy" >> $GITHUB_ENV

      - name: Make setup script executable
        run: chmod +x setup-ci.sh create-dynamodb-tables.sh

      - name: Run setup script (docker-compose + DynamoDB tables)
        run: ./setup-ci.sh

      - name: Build and test with Gradle
        run: ./gradlew build test

      - name: Upload backend JAR artifact
        uses: actions/upload-artifact@v4
        with:
          name: backend-jar
          path: build/quarkus-app/quarkus-run.jar

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Docker image for GHCR
        run: |
          IMAGE_NAME=ghcr.io/${{ github.repository }}
          IMAGE_NAME_LOWER=$(echo "$IMAGE_NAME" | tr '[:upper:]' '[:lower:]')
          docker build -t $IMAGE_NAME_LOWER/backend:${GITHUB_SHA} -f Dockerfile .

      - name: Push Docker image to GHCR
        run: |
          IMAGE_NAME=ghcr.io/${{ github.repository }}
          IMAGE_NAME_LOWER=$(echo "$IMAGE_NAME" | tr '[:upper:]' '[:lower:]')
          docker push $IMAGE_NAME_LOWER/backend:${GITHUB_SHA}


      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_OIDC_ROLE_ARN }}
          aws-region: ap-south-1

      - name: Render ECS task definition with new image tag
        run: |
          IMAGE_NAME=ghcr.io/${{ github.repository }}/backend:${GITHUB_SHA}
          jq --arg IMAGE_NAME "$IMAGE_NAME" '.containerDefinitions[0].image = $IMAGE_NAME' ecs-task-def-base.json > ecs-task-def.json

      - name: Deploy to Amazon ECS
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ecs-task-def.json
          service: ${{ secrets.ECS_SERVICE_NAME }}
          cluster: ${{ secrets.ECS_CLUSTER_NAME }}
          wait-for-service-stability: true